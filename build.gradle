plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.3.1"
}

group = 'com.instead.of.me'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/plugins-release' }
    maven { url 'https://repo.spring.io/plugins-snapshot' }
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = true
    baseName = 'insteadOfMe'
}


def webappDir = "$projectDir/FrontEnd/front-end"

task yarnInstall(type: YarnTask) {
    workingDir = file("${webappDir}")
    args = ["install"]
}


task yarnBuild(type: YarnTask) {
    workingDir = file("${webappDir}")
    args = ['build']
}

task copyFrontEnd(type: Copy) {
    from 'FrontEnd/front-end/build'
    into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
    delete "$projectDir/FrontEnd/front-end/build", "$projectDir/FrontEnd/front-end/node_modules"
}

yarnBuild.dependsOn yarnInstall
copyFrontEnd.dependsOn yarnBuild
processResources.dependsOn copyFrontEnd
clean.dependsOn cleanFrontEnd

